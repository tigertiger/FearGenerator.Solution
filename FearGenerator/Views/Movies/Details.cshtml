@{
  Layout = "_Layout";
}
<div class="container">
@using FearGenerator.Models
@model FearGenerator.Models.Movie
<section class=survival>
<h1 class="survival bleeding">@Model.Title</h1>
<span>&nbsp;</span><br />
@Html.DisplayNameFor(model => model.Rating): @Html.DisplayFor(model => model.Rating)<br />
@Html.DisplayNameFor(model => model.Year): @Html.DisplayFor(model => model.Year)<br />
@Html.DisplayNameFor(model => model.Stars): @Html.DisplayFor(model => model.Stars)<br />
@if(@Model.JoinEntities.Count == 0)
{
  <p>This movie has not been assigned any subgenres...yet.</p>
}
else
{
  <p>Associated Subgenres:</p>
  <ul>
    @foreach(var join in Model.JoinEntities)
    {
      <li>@join.Subgenre.Name</li>
      @using (Html.BeginForm("DeleteSubgenre", "Movies"))
      {
        @Html.Hidden("joinId", @join.MoviesSubgenresId)
        <input type="submit" value="Delete"/>
      }
    }
    </ul>
}
<p>@Html.ActionLink("Add a Subgenre", "AddSubgenre", new {id = Model.MovieId})</p>
<p>@Html.ActionLink("Delete this Movie", "Delete", new { id = Model.MovieId })</p>


<div class="bottomOpts">
<p>@Html.ActionLink("Back to Movies", "Index")</p>
<p>@Html.ActionLink("See all Subgenres", "Index", "Subgenres")</p>
<p>@Html.ActionLink("Edit Movie", "Edit", new{id = Model.MovieId})</p>
</div>
</section>
</div>